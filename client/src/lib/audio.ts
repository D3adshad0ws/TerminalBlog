import { Howl } from 'howler';

// Base64 encoded short audio clips for sound effects
const AUDIO_BASE64 = {
  bgm: 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4Ljc2LjEwMAAAAAAAAAAAAAAA//tQxAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAAASAAAeMwAUFBQUFBQUFBQUFBQUFBQUFBQUFCIiIiIiIiIiIiIiIiIiIiIiIiIiMDAwMDAwMDAwMDAwMDAwMDAwMDAwPj4+Pj4+Pj4+Pj4+Pj4+Pj4+Pj4+TExMTExMTExMTExMTExMTExMTExMWlpaWlpaWlpaWlpaWlpaWlpaWlpaWmhoaGhoaGhoaGhoaGhoaGhoaGhoaHZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnaCgoKCgoKCgoKCgoKCgoKCgoKCgoKSkpKSkpKSkpKSkpKSkpKSkpKSkpKcnJycnJycnJycnJycnJycnJycnJycqqqqqqqqqqqqqqqqqqqqqqqqqqqqvr6+vr6+vr6+vr6+vr6+vr6+vr6+zs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3t7e3t7e3t7e3t7e3t7e3t7e3t7e7u7u7u7u7u7u7u7u7u7u7u7u7u7u//////////////////////////////////////////////////////////////////8AAAA5TEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAjOZLf//tUxBwABHQDe7gEAAKyHLDMAIABLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxBYABGwDYOwEAACwhy50ACQAAAABZQAAAAAAAD/+7JM//usTP//WmZJ///2pn//+lMzPzpTMzP//MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzP/7EGQQAAGkHdMYAQAALQbaYwAgAEVMzM//MzP/zMzMzMzM//MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM//uwxCmAHYAGgoAAAAA7QCWEQAAAT/zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzP8=',
  shoot: 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4Ljc2LjEwMAAAAAAAAAAAAAAA//tQxAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAAADAAAGhgBVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVWqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqr///////////////////////////////////////////8AAAA5TEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAjOZLf//tUxBwABCQDe9gAQAAAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxBYAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EGQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EIQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EKQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EMQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EOQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EQQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7ESQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EUQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EWQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EYQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EaQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EcQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EeQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EgQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EiQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EkQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EmQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EoQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EqQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EsQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EuQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EwQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EyQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7E0QQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7E2QQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7E4QQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7E6QQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7E8QQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7E+QQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7FAQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAA=',
  explosion: 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4Ljc2LjEwMAAAAAAAAAAAAAAA//tQxAAAAAAAAAAAAAAAAAAAAAAASW5mbwAAAA8AAAADAAAGhgBVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVWqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqr///////////////////////////////////////////8AAAA5TEFNRTMuMTAwA8MAAAAAAAAAABQgJAUHQQAB9AAAAjOZLf//tUxBwABCQDe9gAQAAAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//sQxBYAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EGQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EIQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EKQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EMQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EOQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EQQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7ESQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EUQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EWQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EYQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EaQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EcQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EeQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EgQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EiQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EkQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EmQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EoQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EqQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EsQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EuQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EwQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7EyQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7E0QQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7E2QQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7E4QQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7E6QQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7E8QQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7E+QQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAP/7FAQQAAAAGkAAAAAAAAA0gAAAAAAAAAAAAAAAAAAAAAA='
};

class AudioManager {
  private bgm: Howl;
  private soundEffects: {
    [key: string]: Howl;
  };
  private isMuted: boolean = false;

  constructor() {
    // Initialize background music
    this.bgm = new Howl({
      src: [AUDIO_BASE64.bgm],
      loop: true,
      volume: 0.5,
      html5: true
    });

    // Initialize sound effects
    this.soundEffects = {
      shoot: new Howl({
        src: [AUDIO_BASE64.shoot],
        volume: 0.3
      }),
      explosion: new Howl({
        src: [AUDIO_BASE64.explosion],
        volume: 0.4
      })
    };
  }

  playBGM() {
    if (!this.isMuted) {
      this.bgm.play();
    }
  }

  stopBGM() {
    this.bgm.stop();
  }

  playSound(sound: 'shoot' | 'explosion') {
    if (!this.isMuted && this.soundEffects[sound]) {
      this.soundEffects[sound].play();
    }
  }

  toggleMute() {
    this.isMuted = !this.isMuted;
    if (this.isMuted) {
      this.bgm.pause();
    } else {
      this.bgm.play();
    }
    return this.isMuted;
  }
}

export const audioManager = new AudioManager();
